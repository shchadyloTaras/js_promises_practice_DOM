{"version":3,"sources":["scripts/main.js"],"names":["promiseMessage","notification","type","message","document","createElement","p","className","textContent","setAttribute","append","body","firstPromise","Promise","resolve","reject","addEventListener","e","setTimeout","Error","secondPromise","button","thirdPromise","leftClick","rightClick","promise1","promise2","promise3","then","result","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAiB,SAACC,EAAcC,GAC9BC,IAAAA,EAAUC,SAASC,cAAc,OACjCC,EAAIF,SAASC,cAAc,KAEjCF,EAAQI,UAAYL,EACpBI,EAAEE,YAAcP,EAChBK,EAAEG,aAAa,UAAW,gBAE1BN,EAAQO,OAAOJ,GACfF,SAASO,KAAKD,OAAOP,IAGvB,SAASS,IAWA,OAAA,IAAIC,QAVM,SAACC,EAASC,GACzBX,SAASY,iBAAiB,YAAa,SAACC,GACtCH,EAAQ,gCAGVI,WAAW,WACTH,EAAO,IAAII,MAAM,gCAChB,OAMP,SAASC,IASA,OAAA,IAAIP,QARM,SAACC,GAChBV,SAASY,iBAAiB,YAAa,SAACC,GACrB,IAAbA,EAAEI,QAA6B,IAAbJ,EAAEI,QACtBP,EAAQ,mCAQhB,SAASQ,IAqBA,OAAA,IAAIT,QApBM,SAACC,GACZS,IAAAA,EACAC,EAEJpB,SAASY,iBAAiB,YAAa,SAACC,GAC9BA,OAAAA,EAAEI,QACH,KAAA,EACHE,GAAY,EACZ,MACG,KAAA,EACHC,GAAa,EAIbD,GAAaC,GACfV,EAAQ,kCAQhB,IAAMW,EAAWb,IACXc,EAAWN,IACXO,EAAWL,IAEjBG,EACGG,KAAK,SAAAC,GAAU7B,OAAAA,EAAe6B,EAAQ,aACtCC,MAAM,SAAAC,GAAS/B,OAAAA,EAAe+B,EAAO,aAExCL,EACGE,KAAK,SAAAC,GAAU7B,OAAAA,EAAe6B,EAAQ,aAEzCF,EACGC,KAAK,SAAAC,GAAU7B,OAAAA,EAAe6B,EAAQ","file":"main.3bdf9a83.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst promiseMessage = (notification, type) => {\n  const message = document.createElement('div');\n  const p = document.createElement('p');\n\n  message.className = type;\n  p.textContent = notification;\n  p.setAttribute('data-qa', 'notification');\n\n  message.append(p);\n  document.body.append(message);\n};\n\nfunction firstPromise() {\n  const resolver = (resolve, reject) => {\n    document.addEventListener('mousedown', (e) => {\n      resolve('First promise was resolved');\n    });\n\n    setTimeout(() => {\n      reject(new Error('First promise was rejected'));\n    }, 3000);\n  };\n\n  return new Promise(resolver);\n}\n\nfunction secondPromise() {\n  const resolver = (resolve) => {\n    document.addEventListener('mousedown', (e) => {\n      if (e.button === 0 || e.button === 2) {\n        resolve('Second promise was resolved');\n      }\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nfunction thirdPromise() {\n  const resolver = (resolve) => {\n    let leftClick;\n    let rightClick;\n\n    document.addEventListener('mousedown', (e) => {\n      switch (e.button) {\n        case 0:\n          leftClick = true;\n          break;\n        case 2:\n          rightClick = true;\n          break;\n      }\n\n      if (leftClick && rightClick) {\n        resolve('Third promise was resolved');\n      };\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nconst promise1 = firstPromise();\nconst promise2 = secondPromise();\nconst promise3 = thirdPromise();\n\npromise1\n  .then(result => promiseMessage(result, 'success'))\n  .catch(error => promiseMessage(error, 'warning'));\n\npromise2\n  .then(result => promiseMessage(result, 'success'));\n\npromise3\n  .then(result => promiseMessage(result, 'success'));\n"]}